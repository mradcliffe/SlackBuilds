#!/bin/sh -e
# Matthew Radcliffe latest revision 2020/08/10

# Sets initial variables: 
CWD=$(pwd)
if [ "$TMP" = "" ]; then
  TMP=/tmp
fi

VERSION=${VERSION:-27.2}
PKG_VERISON=$VERSION
BUILD=${BUILD:-1}
APP=forked-daapd
PKG=$TMP/package-$APP

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
 case "$( uname -m )" in
   i?86) ARCH=i486 ;;
   arm*) ARCH=arm ;;
   # Unless $ARCH is already set, use uname -m for all other archs:
      *) ARCH=$( uname -m ) ;;
 esac
fi

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG
rm -rf $TMP/$APP-$VERSION

cd $TMP || exit 1

tar -xvf $CWD/$APP-$VERSION.tar.gz || exit 1
cd $APP-$VERSION || exit 1
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# There will be errors...
autoreconf -i

CFLAGS="$SLKCFLAGS -I/usr/include/antlr3" ./configure \
    --prefix=/usr \
    --libdir=/usr/lib$LIBDIRSUFFIX \
    --sysconfdir=/etc/daapd \
    --localstatedir=/var \
    --mandir=/usr/man \
    --enable-chromecast \
    --enable-itunes \
    --disable-spotify \
    --disable-lastfm \
    --disable-mpd \
    --with-libwesockets \
    --with-pulseaudio \
    --build=$ARCH-slackware-linux \
    --host=$ARCH-slackware-linux

make
make install DESTDIR=$PKG

mv $PKG/etc/daapd/forked-daapd.conf $PKG/etc/daapd/forked-daapd.conf.default

mkdir -p $PKG/etc/rc.d
cat $CWD/rc.forked-daapd > $PKG/etc/rc.d/rc.forked-daapd.new

mkdir -p $PKG/var/{run,log,cache}
mkdir -p $PKG/var/cache/forked-daapd

mkdir -p $PKG/usr/doc/$APP-$VERSION
cp -a AUTHORS ChangeLog COPYING INSTALL.md NEWS README* UPGRADING $PKG/usr/doc/$APP-$VERSION
cat $CWD/$APP.SlackBuild > $PKG/usr/doc/$APP-$VERSION/$APP.SlackBuild

# Create the ./install directory and copy the slack-desc into it
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Add doinst.sh to package (if it exists)
if [ -e $CWD/doinst.sh.gz ]; then
  zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
elif [ -e $CWD/doinst.sh ]; then
  cat $CWD/doinst.sh > $PKG/install/doinst.sh
fi

# Strip some libraries and binaries
( cd $PKG
   find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
   find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

# Compress man pages if they exist
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
     find . -type f -exec gzip -9 {} \;
     for i in $(find . -type l) ; do ln -s $(readlink $i).gz $i.gz ; rm $i ; done
  ) 
fi

# Build the package
cd $PKG
/sbin/makepkg -l y -c n $TMP/$APP-$VERSION-$ARCH-$BUILD.tgz

