#!/bin/sh -e
# Matthew Radcliffe last revision 2020/08/13

CWD=$(pwd)
if [ "$TMP" = "" ]; then
  TMP=/tmp
fi

VERSION=${VERSION:-0.2.3}
BUILD=${BUILD:-1}
APP=fcitx-anthy
PKG=$TMP/package-$APP

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
 case "$( uname -m )" in
   i?86) ARCH=i486 ;;
   arm*) ARCH=arm ;;
   # Unless $ARCH is already set, use uname -m for all other archs:
      *) ARCH=$( uname -m ) ;;
 esac
fi

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG
rm -rf $TMP/$APP-$VERSION

cd $TMP || exit 1

tar -xvf $CWD/$APP-$VERSION.tar.gz || exit 1
cd $APP-$VERSION || exit 1
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

mkdir build; cd build
cmake \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLIB_INSTALL_DIR=/usr/lib$LIBDIRSUFFIX \
    -DCMAKE_C_FLAGS:STRING=${SLKCFLAGS} \
    -DCMAKE_CXX_FLAGS:STRING=${SLKCFLAGS} \
    ..

make install DESTDIR=$PKG
cd ..

# Create a directory for documentation
mkdir -p $PKG/usr/doc/$APP-$VERSION

# Copy documentation to the docs directory and fix permissions
cp -a INSTALL README COPYING AUTHORS $PKG/usr/doc/$APP-$VERSION
cat $CWD/$APP.SlackBuild > $PKG/usr/doc/$APP-$VERSION/$APP.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $TMP/$APP-$VERSION-$ARCH-$BUILD.txz





