#!/bin/sh -e
# Matthew Radcliffe latest revision 2020/08/20

CWD=$(pwd)
if [ "$TMP" = "" ]; then
  TMP=/tmp
fi

VERSION=${VERSION:-2.4.2}
APP=audacity
SRCNAM=$APP-Audacity
BUILD=${BUILD:-2}
PKG=$TMP/package-$APP
PYTHON=${PYTHON:-python3}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
 case "$( uname -m )" in
   i?86) ARCH=i486 ;;
   arm*) ARCH=arm ;;
   # Unless $ARCH is already set, use uname -m for all other archs:
      *) ARCH=$( uname -m ) ;;
 esac
fi

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686 -DHAVE_VISIBILITY=1"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686 -DHAVE_VISIBILITY=1"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC -DHAVE_VISIBILITY=1"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2 -DHAVE_VISIBILITY=1"
  LIBDIRSUFFIX=""
fi

# Delete the leftover directories if they exist (due to a previous build)
# and (re)create the packaging directory
rm -rf $PKG 
mkdir -p $TMP $PKG
rm -rf $TMP/$SRCNAM-$VERSION

# Change to the TMP directory
cd $TMP || exit 1
 
# Extract the application source in TMP
# Note: if your application comes as a tar.bz2, you need tar -jxvf
tar -zxvf $CWD/$SRCNAM-$VERSION.tar.gz || exit 1

# Change to the application source directory
cd $SRCNAM-$VERSION || exit 1
 
# Change ownership and permissions if necessary
# This may not be needed in some source tarballs, but it never hurts
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

mkdir build
cd build

CFLAGS="$SLKCFLAGS" CXXFLAGS="$SLKCFLAGS" \
    cmake \
    -DCMAKE_BUILD_TYPE=Release \
    -Daudacity_use_ffmpeg=loaded \
    -DCMAKE_INSTALL_PREFIX:PATH=/usr \
    -DCMAKE_INSTALL_LIBDIR=/usr/lib$LIBDIRSUFFIX \
    -DCMAKE_INSTALL_MANDIR:STRING=/usr/man \
    ..

make
make install DESTDIR=$PKG

install -vDm644 $CWD/$APP.desktop /usr/share/applications/audacity.desktop

# Go back to the source directory.
cd $TMP/$SRCNAM-$VERSION
mkdir -p $PKG/usr/doc/$APP-$VERSION
cp -a ABOUT-NLS CHANGELOG.txt CODE_OF_CONDUCT.md CONTRIBUTING.md INSTALL LICENSE.txt README.md README.txt todo.txt $PKG/usr/doc/$APP-$VERSION
cat $CWD/$APP.SlackBuild > $PKG/usr/doc/$APP-$VERSION/$APP.SlackBuild
cd $PKG/usr/doc/$APP-$VERSION
unzip $CWD/$APP-manual-$VERSION.zip
cd $PKG

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Add doinst.sh to package
cat $CWD/doinst.sh > $PKG/install/doinst.sh

# Strip some libraries and binaries
( cd $PKG
   find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
   find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

# Compress man pages if they exist
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
  find . -type f -exec gzip -9 {} \;
  for i in $(find . -type l) ; do ln -s $(readlink $i).gz $i.gz ; rm $i ; done
  ) 
fi

# Build the package
cd $PKG
/sbin/makepkg -l y -c n $TMP/$APP-$VERSION-$ARCH-$BUILD.tgz

